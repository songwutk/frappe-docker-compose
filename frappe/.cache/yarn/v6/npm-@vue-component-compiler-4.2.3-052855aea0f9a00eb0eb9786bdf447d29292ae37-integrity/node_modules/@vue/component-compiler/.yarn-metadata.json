{
  "manifest": {
    "name": "@vue/component-compiler",
    "version": "4.2.3",
    "description": "bundler agnostic API for compiling Vue SFC",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/vuejs/vue-component-compiler.git"
    },
    "keywords": [
      "vue",
      "compiler",
      "sfc"
    ],
    "author": {
      "name": "Rahul Kadyan"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/vuejs/vue-component-compiler/issues"
    },
    "main": "dist/index.js",
    "typings": "dist/index.d.ts",
    "files": [
      "dist"
    ],
    "scripts": {
      "build": "tsc",
      "prepare": "rm -rf dist && npm run build",
      "pretest": "npm run build",
      "test": "jest",
      "prerelease": "npm run test",
      "release": "standard-version -a"
    },
    "homepage": "https://github.com/vuejs/vue-component-compiler#readme",
    "devDependencies": {
      "@types/clean-css": "^3.4.30",
      "@types/jest": "^25.2.3",
      "@types/node": "^9.4.7",
      "babel-plugin-external-helpers": "^6.22.0",
      "babel-preset-env": "^1.6.1",
      "conventional-changelog": "^1.1.24",
      "jest": "^22.4.2",
      "puppeteer": "^1.3.0",
      "rollup": "^0.58.2",
      "rollup-plugin-babel": "^3.0.4",
      "rollup-plugin-commonjs": "^9.1.0",
      "rollup-plugin-image": "^1.0.2",
      "rollup-plugin-node-resolve": "^3.3.0",
      "ts-jest": "^22.4.2",
      "typescript": "^3.2.4",
      "typescript-eslint-parser": "^15.0.0",
      "vue": "^2.5.16",
      "vue-template-compiler": "^2.5.16"
    },
    "optionalDependencies": {
      "less": "^3.9.0",
      "pug": "^2.0.3",
      "sass": "^1.18.0",
      "stylus": "^0.54.5"
    },
    "peerDependencies": {
      "postcss": ">=6.0",
      "vue-template-compiler": "*"
    },
    "dependencies": {
      "@vue/component-compiler-utils": "^3.0.0",
      "clean-css": "^4.1.11",
      "hash-sum": "^1.0.2",
      "postcss-modules-sync": "^1.0.0",
      "source-map": "0.6.*"
    },
    "_registry": "npm",
    "_loc": "/home/frappe/.cache/yarn/v6/npm-@vue-component-compiler-4.2.3-052855aea0f9a00eb0eb9786bdf447d29292ae37-integrity/node_modules/@vue/component-compiler/package.json",
    "readmeFilename": "README.md",
    "readme": "# @vue/component-compiler [![Build Status](https://circleci.com/gh/vuejs/vue-component-compiler/tree/master.svg?style=shield)](https://circleci.com/gh/vuejs/vue-component-compiler)\n\n> High level utilities for compiling Vue single file components\n\nThis package contains high level utilities that you can use if you are writing a plugin / transform for a bundler or module system that compiles Vue single file components into JavaScript. It is used in [rollup-plugin-vue](https://github.com/vuejs/rollup-plugin-vue) version 3 and above.\n\nThe API surface is intentionally minimal - the goal is to reuse as much as possible while being as flexible as possible.\n\n## API\n\n### createDefaultCompiler(Options): SFCCompiler\n\nCreates a compiler instance.\n\n```typescript\ninterface Options {\n  script?: ScriptOptions\n  style?: StyleOptions\n  template?: TemplateOptions\n}\n\ninterface ScriptOptions {\n  preprocessorOptions?: any\n}\n\ninterface StyleOptions {\n  postcssOptions?: any\n  postcssPlugins?: any[]\n  postcssModulesOptions?: any\n  preprocessOptions?: any\n  postcssCleanOptions?: any\n  trim?: boolean\n}\n\ninterface TemplateOptions {\n  compiler: VueTemplateCompiler\n  compilerOptions: VueTemplateCompilerOptions\n  preprocessOptions?: any\n  transformAssetUrls?: AssetURLOptions | boolean\n  transpileOptions?: any\n  isProduction?: boolean\n  optimizeSSR?: boolean\n}\n```\n\n### SFCCompiler.compileToDescriptor(filename: string, source: string): DescriptorCompileResult\n\nTakes raw source and compiles each block separately. Internally, it uses [compileTemplate](https://github.com/vuejs/component-compiler-utils/blob/master/README.md#compiletemplatetemplatecompileoptions-templatecompileresults) and [compileStyle](https://github.com/vuejs/component-compiler-utils/blob/master/README.md#compilestylestylecompileoptions) from [@vue/component-compiler-utils](https://github.com/vuejs/component-compiler-utils).\n\n```typescript\ninterface DescriptorCompileResult {\n  customBlocks: SFCBlock[]\n  scopeId: string\n  script?: CompileResult\n  styles: StyleCompileResult[]\n  template?: TemplateCompileResult & { functional: boolean }\n}\n\ninterface CompileResult {\n  code: string\n  map?: any\n}\n\ninterface StyleCompileResult {\n  code: string\n  map?: any\n  scoped?: boolean\n  media?: string\n  moduleName?: string\n  module?: any\n}\n\ninterface TemplateCompileResult {\n  code: string;\n  source: string;\n  tips: string[];\n  errors: string[];\n  functional: boolean;\n}\n```\n\n#### Handling the Output\n\nThe blocks from the resulting descriptor should be assembled into JavaScript code:\n\n##### assemble(compiler: SFCCompiler, filename: string, result: DescriptorCompileResult, options: AssembleOptions): AssembleResults\n\n```typescript\ninterface AssembleResults {\n  code: string\n  map?: any\n}\n```\n\n```typescript\ninterface AssembleOptions {\n  normalizer?: string\n  styleInjector?: string\n  styleInjectorSSR?: string\n}\n```\n\n\nThe `assemble` method is an example implementation for how to combine various parts from the descriptor. You can provide custom implementations for `normalizer`, `styleInjector` and `styleInjectorSSR`:\n\n* Directly in-lined (default)\n* Using a global function (normalizer: 'myComponentNormalizer')\n* Using an import ({ normalizer: '~my-component-normalizer' })\n\nThe `assemble` method also accepts global variable name in `source`, `map` and `module` of styles. \n",
    "licenseText": "MIT License\n\nCopyright (c) 2014-present Yuxi (Evan) You\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@vue/component-compiler/-/component-compiler-4.2.3.tgz#052855aea0f9a00eb0eb9786bdf447d29292ae37",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@vue/component-compiler/-/component-compiler-4.2.3.tgz",
    "hash": "052855aea0f9a00eb0eb9786bdf447d29292ae37",
    "integrity": "sha512-B221AV3T/6PF37WnkoqUKIxBeHXmGuZsi/8pby89MAVSj9zmDdLCEZ7LDT8+DJWbElFrPELgnSvEadXxDRcrJQ==",
    "registry": "npm",
    "packageName": "@vue/component-compiler",
    "cacheIntegrity": "sha512-B221AV3T/6PF37WnkoqUKIxBeHXmGuZsi/8pby89MAVSj9zmDdLCEZ7LDT8+DJWbElFrPELgnSvEadXxDRcrJQ== sha1-BShVrqD5oA6w65eGvfRH0pKSrjc="
  },
  "registry": "npm",
  "hash": "052855aea0f9a00eb0eb9786bdf447d29292ae37"
}