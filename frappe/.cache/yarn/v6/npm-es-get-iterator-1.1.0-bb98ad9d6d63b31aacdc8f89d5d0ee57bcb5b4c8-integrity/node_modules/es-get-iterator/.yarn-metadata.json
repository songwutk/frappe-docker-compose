{
  "manifest": {
    "name": "es-get-iterator",
    "version": "1.1.0",
    "description": "Get an iterator for any JS language value. Works robustly across all environments, all versions.",
    "main": "index",
    "exports": {
      ".": [
        {
          "browser": "./index.js",
          "import": "./node.mjs",
          "default": "./node.js"
        },
        "./node.js"
      ],
      "./package": "./package.json",
      "./package.json": "./package.json"
    },
    "type": "commonjs",
    "scripts": {
      "prepublish": "safe-publish-latest",
      "lint": "eslint --ext=js,mjs .",
      "pretest": "npm run lint",
      "tests-only": "nyc node test/${TEST_VARIANT-}",
      "tests-esm": "nyc node test/node.mjs",
      "test": "npm run tests-only && npm run tests-esm",
      "posttest": "npx aud --production",
      "version": "auto-changelog && git add CHANGELOG.md",
      "postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/ljharb/es-get-iterator.git"
    },
    "keywords": [
      "iterator",
      "Symbol.iterator",
      "iterable",
      "collection",
      "next",
      "iteration"
    ],
    "author": {
      "name": "Jordan Harband",
      "email": "ljharb@gmail.com"
    },
    "funding": {
      "url": "https://github.com/sponsors/ljharb"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/ljharb/es-get-iterator/issues"
    },
    "homepage": "https://github.com/ljharb/es-get-iterator#readme",
    "devDependencies": {
      "@ljharb/eslint-config": "^16.0.0",
      "auto-changelog": "^1.16.2",
      "core-js": "^2.6.10 || ^3.4.2",
      "es5-shim": "^4.5.13",
      "es6-shim": "^0.35.5",
      "eslint": "^6.8.0",
      "for-each": "^0.3.3",
      "has-bigints": "^1.0.0",
      "nyc": "^10.3.2",
      "object-inspect": "^1.7.0",
      "safe-publish-latest": "^1.1.4",
      "tape": "^5.0.0-next.3"
    },
    "testling": {
      "files": "./test/index.js"
    },
    "greenkeeper": {
      "ignore": [
        "nyc"
      ]
    },
    "dependencies": {
      "es-abstract": "^1.17.4",
      "has-symbols": "^1.0.1",
      "is-arguments": "^1.0.4",
      "is-map": "^2.0.1",
      "is-set": "^2.0.1",
      "is-string": "^1.0.5",
      "isarray": "^2.0.5"
    },
    "auto-changelog": {
      "output": "CHANGELOG.md",
      "template": "keepachangelog",
      "unreleased": false,
      "commitLimit": false,
      "backfillLimit": false
    },
    "_registry": "npm",
    "_loc": "/home/frappe/.cache/yarn/v6/npm-es-get-iterator-1.1.0-bb98ad9d6d63b31aacdc8f89d5d0ee57bcb5b4c8-integrity/node_modules/es-get-iterator/package.json",
    "readmeFilename": "README.md",
    "readme": "# es-get-iterator <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![Build Status][travis-svg]][travis-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\nGet an iterator for any JS language value. Works robustly across all environments, all versions.\n\nIn modern engines, `value[Symbol.iterator]()` is sufficient to produce an iterator (an object with a `.next` method) for that object. However, older engines:\n - may lack `Symbol` support altogether\n - may have `Symbol.iterator` but not implement it on everything it should, like arguments objects\n - may have `Map` and `Set`, but a non-standard name for the iterator-producing method (`.iterator` or `['@@iterator']`, eg)\n - may be old versions of Firefox that produce values until they throw a StopIteration exception, rather than having iteration result objects\n - may be polyfilled/shimmed/shammed, with `es6-shim` or `core-js` or similar\n\nThis library attempts to provide an abstraction over all that complexity!\n\nIn node v13+, `exports` is used to provide a lean implementation that lacks all the complexity described above, in combination with the `browser` field so that bundlers will pick up the proper implementation.\n\n## Targeting browsers with Symbol support\n\nIf you are targeting browsers that definitely all have Symbol support, then you can configure your bundler to replace `require('has-symbols')()` with a literal `true`, which should allow dead code elimination to reduce the size of the bundled code.\n\n### With `@rollup/plugin-replace`\n\n```js\n// rollup.config.js\n\nimport replace from '@rollup/plugin-replace';\n\nexport default {\n\t...\n\tplugins: [\n\t\treplace({\n\t\t\t\"require('has-symbols')()\": 'true',\n\t\t\tdelimiters: ['', '']\n\t\t})\n\t]\n};\n```\n\n## Example\n\n```js\nvar getIterator = require('es-get-iterator');\nvar assert = require('assert');\n\nvar iterator = getIterator('a ðŸ’©');\nassert.deepEqual(\n\t[iterator.next(), iterator.next(), iterator.next(), iterator.next()],\n\t[{ done: false, value: 'a' }, { done: false, value: ' ' }, { done: false, value: 'ðŸ’©' }, { done: true, value: undefined }]\n);\n\nvar iterator = getIterator([1, 2]);\nassert.deepEqual(\n\t[iterator.next(), iterator.next(), iterator.next()],\n\t[{ done: false, value: 1 }, { done: false, value: 2 }, { done: true, value: undefined }]\n);\n\nvar iterator = getIterator(new Set([1, 2]));\nassert.deepEqual(\n\t[iterator.next(), iterator.next(), iterator.next()],\n\t[{ done: false, value: 1 }, { done: false, value: 2 }, { done: true, value: undefined }]\n);\n\nvar iterator = getIterator(new Map([[1, 2], [3, 4]]));\nassert.deepEqual(\n\t[iterator.next(), iterator.next(), iterator.next()],\n\t[{ done: false, value: [1, 2] }, { done: false, value: [3, 4] }, { done: true, value: undefined }]\n);\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n[package-url]: https://npmjs.org/package/es-get-iterator\n[npm-version-svg]: http://versionbadg.es/ljharb/es-get-iterator.svg\n[travis-svg]: https://travis-ci.org/ljharb/es-get-iterator.svg\n[travis-url]: https://travis-ci.org/ljharb/es-get-iterator\n[deps-svg]: https://david-dm.org/ljharb/es-get-iterator.svg\n[deps-url]: https://david-dm.org/ljharb/es-get-iterator\n[dev-deps-svg]: https://david-dm.org/ljharb/es-get-iterator/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/es-get-iterator#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/es-get-iterator.png?downloads=true&stars=true\n[license-image]: http://img.shields.io/npm/l/es-get-iterator.svg\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/es-get-iterator.svg\n[downloads-url]: http://npm-stat.com/charts.html?package=es-get-iterator\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019 Jordan Harband\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/es-get-iterator/-/es-get-iterator-1.1.0.tgz#bb98ad9d6d63b31aacdc8f89d5d0ee57bcb5b4c8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/es-get-iterator/-/es-get-iterator-1.1.0.tgz",
    "hash": "bb98ad9d6d63b31aacdc8f89d5d0ee57bcb5b4c8",
    "integrity": "sha512-UfrmHuWQlNMTs35e1ypnvikg6jCz3SK8v8ImvmDsh36fCVUR1MqoFDiyn0/k52C8NqO3YsO8Oe0azeesNuqSsQ==",
    "registry": "npm",
    "packageName": "es-get-iterator",
    "cacheIntegrity": "sha512-UfrmHuWQlNMTs35e1ypnvikg6jCz3SK8v8ImvmDsh36fCVUR1MqoFDiyn0/k52C8NqO3YsO8Oe0azeesNuqSsQ== sha1-u5itnW1jsxqs3I+J1dDuV7y1tMg="
  },
  "registry": "npm",
  "hash": "bb98ad9d6d63b31aacdc8f89d5d0ee57bcb5b4c8"
}