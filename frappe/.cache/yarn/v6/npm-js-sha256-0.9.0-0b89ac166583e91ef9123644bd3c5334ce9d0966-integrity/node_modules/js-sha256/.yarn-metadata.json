{
  "manifest": {
    "name": "js-sha256",
    "version": "0.9.0",
    "description": "A simple SHA-256 / SHA-224 hash function for JavaScript supports UTF-8 encoding.",
    "main": "src/sha256.js",
    "devDependencies": {
      "expect.js": "~0.3.1",
      "mocha": "~2.3.4",
      "nyc": "^11.3.0",
      "uglify-js": "^3.1.9",
      "webworker-threads": "^0.7.13"
    },
    "scripts": {
      "test": "nyc mocha tests/node-test.js",
      "report": "nyc --reporter=html --reporter=text mocha tests/node-test.js",
      "coveralls": "nyc report --reporter=text-lcov | coveralls",
      "build": "uglifyjs src/sha256.js -c -m eval --comments -o build/sha256.min.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/emn178/js-sha256.git"
    },
    "keywords": [
      "sha",
      "sha2",
      "sha224",
      "sha256",
      "hash",
      "encryption",
      "cryptography",
      "HMAC"
    ],
    "license": "MIT",
    "author": {
      "name": "Chen, Yi-Cyuan",
      "email": "emn178@gmail.com"
    },
    "homepage": "https://github.com/emn178/js-sha256",
    "bugs": {
      "url": "https://github.com/emn178/js-sha256/issues"
    },
    "nyc": {
      "exclude": [
        "tests"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/frappe/.cache/yarn/v6/npm-js-sha256-0.9.0-0b89ac166583e91ef9123644bd3c5334ce9d0966-integrity/node_modules/js-sha256/package.json",
    "readmeFilename": "README.md",
    "readme": "# js-sha256\n[![Build Status](https://travis-ci.org/emn178/js-sha256.svg?branch=master)](https://travis-ci.org/emn178/js-sha256)\n[![Coverage Status](https://coveralls.io/repos/emn178/js-sha256/badge.svg?branch=master)](https://coveralls.io/r/emn178/js-sha256?branch=master)\n[![CDNJS](https://img.shields.io/cdnjs/v/js-sha256.svg)](https://cdnjs.com/libraries/js-sha256/)  \n[![NPM](https://nodei.co/npm/js-sha256.png?stars&downloads)](https://nodei.co/npm/js-sha256/)  \nA simple SHA-256 / SHA-224 hash function for JavaScript supports UTF-8 encoding.\n\n## Demo\n[SHA256 Online](http://emn178.github.io/online-tools/sha256.html)  \n[SHA224 Online](http://emn178.github.io/online-tools/sha224.html)  \n\n## Download\n[Compress](https://raw.github.com/emn178/js-sha256/master/build/sha256.min.js)  \n[Uncompress](https://raw.github.com/emn178/js-sha256/master/src/sha256.js)\n\n## Installation\nYou can also install js-sha256 by using Bower.\n\n    bower install js-sha256\n\nFor node.js, you can use this command to install:\n\n    npm install js-sha256\n\n## Usage\nYou could use like this:\n```JavaScript\nsha256('Message to hash');\nsha224('Message to hash');\n\nvar hash = sha256.create();\nhash.update('Message to hash');\nhash.hex();\n\nvar hash2 = sha256.update('Message to hash');\nhash2.update('Message2 to hash');\nhash2.array();\n\n// HMAC\nsha256.hmac('key', 'Message to hash');\nsha224.hmac('key', 'Message to hash');\n\nvar hash = sha256.hmac.create('key');\nhash.update('Message to hash');\nhash.hex();\n\nvar hash2 = sha256.hmac.update('key', 'Message to hash');\nhash2.update('Message2 to hash');\nhash2.array();\n```\nIf you use node.js, you should require the module first:\n```JavaScript\nvar sha256 = require('js-sha256');\n```\nor \n```JavaScript\nvar sha256 = require('js-sha256').sha256;\nvar sha224 = require('js-sha256').sha224;\n```\nIt supports AMD:\n```JavaScript\nrequire(['your/path/sha256.js'], function(sha256) {\n// ...\n});\n```\nor TypeScript\n```TypeScript\nimport { sha256, sha224 } from 'js-sha256';\n```\n## Example\n```JavaScript\nsha256(''); // e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nsha256('The quick brown fox jumps over the lazy dog'); // d7a8fbb307d7809469ca9abcb0082e4f8d5651e46d3cdb762d02d0bf37c9e592\nsha256('The quick brown fox jumps over the lazy dog.'); // ef537f25c895bfa782526529a9b63d97aa631564d5d789c2b765448c8635fb6c\nsha224(''); // d14a028c2a3a2bc9476102bb288234c415a2b01f828ea62ac5b3e42f\nsha224('The quick brown fox jumps over the lazy dog'); // 730e109bd7a8a32b1cb9d9a09aa2325d2430587ddbc0c38bad911525\nsha224('The quick brown fox jumps over the lazy dog.'); // 619cba8e8e05826e9b8c519c0a5c68f4fb653e8a3d8aa04bb2c8cd4c\n\n// It also supports UTF-8 encoding\nsha256('中文'); // 72726d8818f693066ceb69afa364218b692e62ea92b385782363780f47529c21\nsha224('中文'); // dfbab71afdf54388af4d55f8bd3de8c9b15e0eb916bf9125f4a959d4\n\n// It also supports byte `Array`, `Uint8Array`, `ArrayBuffer` input\nsha256([]); // e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nsha256(new Uint8Array([211, 212])); // 182889f925ae4e5cc37118ded6ed87f7bdc7cab5ec5e78faef2e50048999473f\n\n// Different output\nsha256(''); // e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nsha256.hex(''); // e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\nsha256.array(''); // [227, 176, 196, 66, 152, 252, 28, 20, 154, 251, 244, 200, 153, 111, 185, 36, 39, 174, 65, 228, 100, 155, 147, 76, 164, 149, 153, 27, 120, 82, 184, 85]\nsha256.digest(''); // [227, 176, 196, 66, 152, 252, 28, 20, 154, 251, 244, 200, 153, 111, 185, 36, 39, 174, 65, 228, 100, 155, 147, 76, 164, 149, 153, 27, 120, 82, 184, 85]\nsha256.arrayBuffer(''); // ArrayBuffer\n```\n\n## License\nThe project is released under the [MIT license](http://www.opensource.org/licenses/MIT).\n\n## Contact\nThe project's website is located at https://github.com/emn178/js-sha256  \nAuthor: Chen, Yi-Cyuan (emn178@gmail.com)\n",
    "licenseText": "Copyright (c) 2014-2017 Chen, Yi-Cyuan\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/js-sha256/-/js-sha256-0.9.0.tgz#0b89ac166583e91ef9123644bd3c5334ce9d0966",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/js-sha256/-/js-sha256-0.9.0.tgz",
    "hash": "0b89ac166583e91ef9123644bd3c5334ce9d0966",
    "integrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA==",
    "registry": "npm",
    "packageName": "js-sha256",
    "cacheIntegrity": "sha512-sga3MHh9sgQN2+pJ9VYZ+1LPwXOxuBJBA5nrR5/ofPfuiJBE2hnjsaN8se8JznOmGLN2p49Pe5U/ttafcs/apA== sha1-C4msFmWD6R75EjZEvTxTNM6dCWY="
  },
  "registry": "npm",
  "hash": "0b89ac166583e91ef9123644bd3c5334ce9d0966"
}