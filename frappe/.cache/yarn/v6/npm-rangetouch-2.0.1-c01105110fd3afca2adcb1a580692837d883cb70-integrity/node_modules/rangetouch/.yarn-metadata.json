{
  "manifest": {
    "name": "rangetouch",
    "version": "2.0.1",
    "description": "A super tiny library to make input type='range' sliders work better on touch devices",
    "homepage": "https://rangetouch.com/",
    "author": {
      "name": "Sam Potts",
      "email": "sam@potts.es"
    },
    "license": "MIT",
    "main": "dist/rangetouch.js",
    "module": "dist/rangetouch.mjs",
    "jsnext:main": "dist/rangetouch.mjs",
    "browser": "dist/rangetouch.js",
    "browserslist": "> 1%",
    "keywords": [
      "range",
      "slider",
      "rangetouch"
    ],
    "repository": {
      "type": "git",
      "url": "git://github.com/sampotts/rangetouch.git"
    },
    "bugs": {
      "url": "https://github.com/sampotts/rangetouch/issues"
    },
    "scripts": {
      "lint": "eslint src/js",
      "deploy": "yarn lint && gulp deploy"
    },
    "dependencies": {},
    "devDependencies": {
      "ansi-colors": "^4.1.1",
      "aws-sdk": "^2.630.0",
      "@babel/core": "^7.8.6",
      "@babel/preset-env": "^7.8.6",
      "babel-eslint": "^10.1.0",
      "babel-preset-minify": "^0.5.1",
      "del": "^5.1.0",
      "eslint": "^5.16.0",
      "eslint-config-airbnb-base": "^14.0.0",
      "eslint-config-prettier": "^6.10.0",
      "eslint-plugin-import": "^2.20.1",
      "fancy-log": "^1.3.3",
      "gulp": "^4.0.2",
      "gulp-autoprefixer": "^7.0.1",
      "gulp-awspublish": "^4.1.1",
      "gulp-better-rollup": "^4.0.1",
      "gulp-clean-css": "^4.2.0",
      "gulp-imagemin": "^7.1.0",
      "gulp-less": "^4.0.1",
      "gulp-plumber": "^1.2.1",
      "gulp-rename": "^2.0.0",
      "gulp-replace": "^1.0.0",
      "gulp-s3": "^0.11.0",
      "gulp-size": "^3.0.0",
      "gulp-sourcemaps": "^2.6.5",
      "gulp-svgstore": "^7.0.1",
      "gulp-terser": "^1.2.0",
      "prettier-eslint": "^9.0.1",
      "prettier-stylelint": "^0.4.2",
      "rollup": "^1.32.0",
      "rollup-plugin-babel": "^4.3.3",
      "rollup-plugin-commonjs": "^10.1.0",
      "rollup-plugin-node-resolve": "^5.2.0",
      "rollup-plugin-replace": "^2.2.0",
      "stylelint": "^13.2.0",
      "stylelint-config-prettier": "^8.0.1",
      "stylelint-config-recommended": "^3.0.0",
      "stylelint-order": "^4.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/frappe/.cache/yarn/v6/npm-rangetouch-2.0.1-c01105110fd3afca2adcb1a580692837d883cb70-integrity/node_modules/rangetouch/package.json",
    "readmeFilename": "readme.md",
    "readme": "# RangeTouch\n\nA super tiny library to make `<input type=\"range\">` sliders work better on touch devices.\n\n[Donate](#donate) - [Demo](https://rangetouch.com) - [![npm version](https://badge.fury.io/js/rangetouch.svg)](https://badge.fury.io/js/rangetouch)\n\n## Why bother?\n\nWhile building the [Plyr media player](https://plyr.io) I noticed how bad the experience was trying to use `<input type=\"range\">` is on a touch device (particularly iOS). Touching the track on a desktop will jump the thumb handle to that point. However on some touch devices this simply focuses the input and to adjust the value you need to touch and drag the handle. This is something that I can't help but feel will eventually be fixed by the browser vendors but for now, you can use RangeTouch to fill that gap.\n\n## Features\n\n-   ~1KB minified and gzipped\n-   No dependencies (written in \"vanilla\" JavaScript)\n-   Uses event delgation so no need to re-run after DOM manipulation\n\n## Quick setup\n\n### 1. Include the lib\n\nEither use the ES6 module:\n\n```javascript\nimport RangeTouch from 'rangetouch';\n```\n\n...or include the script:\n\n```html\n<script src=\"https://rangetouch.com/2.0.1/rangetouch.js\"></script>\n```\n\n### 2. Create instance(s)\n\n#### Single instance\n\n```javascript\nconst range = new RangeTouch('input[type=\"range\"]', { ...options });\n```\n\nThe first argument can either be:\n\n-   a [valid CSS selector](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector)\n-   an [Element](https://developer.mozilla.org/en-US/docs/Web/API/Element)\n\nThe second argument is for options.\n\nThis will return a reference to the single instance.\n\n#### Multiple instances\n\nTo setup multiple inputs at one time, you can use the following static method:\n\n```javascript\nconst ranges = RangeTouch.setup('input[type=\"range\"]', { ...options });\n```\n\nThe first argument can either be:\n\n-   a [valid CSS selector](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector)\n-   an [Element](https://developer.mozilla.org/en-US/docs/Web/API/Element)\n-   an [NodeList](https://developer.mozilla.org/en-US/docs/Web/API/NodeList)\n-   an [Element](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array) of [Element](https://developer.mozilla.org/en-US/docs/Web/API/Element)\n\nThe second argument is for options.\n\nThis will return an array of RangeTouch instances that it setup.\n\n## Options\n\n| Property   | Type    | Default | Description                                                                                                                                                                                                                                                                                                                                                                    |\n| ---------- | ------- | ------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| addCSS     | Boolean | `true`  | Whether to inject CSS to improve the usability of the inputs. It's recommended you add this yourself if you don't want RangeTouch to take care of it.                                                                                                                                                                                                                          |\n| thumbWidth | Integer | `15`    | This value is used as part of the calculation to determine the value the users selects when touching the range track. Unfortunately as JavaScript can't access the shadow DOM, this value can't be automatically determined. I would recommend customisation (and setting the size of the thumb) given all OS and browser combinations seem to render the control differently. |\n| watch      | Boolean | `true`  | Watch for new elements added to the DOM that match your string selector. **Note**: This only applies when using the multiple instance `RangeTouch` setup method and also requires a string selector as the first argument.                                                                                                                                                     |\n\n## API\n\n| Method    | Arguments | Description                                              |\n| --------- | --------- | -------------------------------------------------------- |\n| destroy() | N/A       | Destroy the current instance and remove event listeners. |\n\nTo call an API method, you need a reference to the instance. For example:\n\n```javascript\nconst range = new RangeTouch('input[type=\"range\"]', { ...options });\nrange.destroy();\n```\n\n## Issues\n\nIf you find anything weird with RangeTouch, please let us know using the [GitHub issues tracker](https://github.com/sampotts/rangetouch/issues) and be descriptive on how to reproduce, expected result, the browser (and version) used, etc.\n\n## Author\n\nRangeTouch is developed by [@sam_potts](https://twitter.com/sam_potts) / [sampotts.me](http://sampotts.me)\n\n## Donate\n\nRangeTouch costs money to run for domains, hosting and more. Any help is appreciated...\n[Donate to support RangeTouch](https://www.paypal.me/pottsy/20usd)\n\n## Thanks\n\n[![Fastly](https://cdn.plyr.io/static/fastly-logo.png)](https://www.fastly.com/)\n\nThanks to [Fastly](https://www.fastly.com/) for providing the CDN services.\n\n## Copyright and License\n\n[The MIT license](license.md).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2019 Sam Potts\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rangetouch/-/rangetouch-2.0.1.tgz#c01105110fd3afca2adcb1a580692837d883cb70",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rangetouch/-/rangetouch-2.0.1.tgz",
    "hash": "c01105110fd3afca2adcb1a580692837d883cb70",
    "integrity": "sha512-sln+pNSc8NGaHoLzwNBssFSf/rSYkqeBXzX1AtJlkJiUaVSJSbRAWJk+4omsXkN+EJalzkZhWQ3th1m0FpR5xA==",
    "registry": "npm",
    "packageName": "rangetouch",
    "cacheIntegrity": "sha512-sln+pNSc8NGaHoLzwNBssFSf/rSYkqeBXzX1AtJlkJiUaVSJSbRAWJk+4omsXkN+EJalzkZhWQ3th1m0FpR5xA== sha1-wBEFEQ/Tr8oq3LGlgGkoN9iDy3A="
  },
  "registry": "npm",
  "hash": "c01105110fd3afca2adcb1a580692837d883cb70"
}